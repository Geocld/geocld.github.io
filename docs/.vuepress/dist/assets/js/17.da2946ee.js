(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{490:function(e,n,t){"use strict";t.r(n);var v=t(62),o=Object(v.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("在上一篇博客中已经配置好"),t("code",[e._v("package.json")]),e._v("文件并通过"),t("code",[e._v("npm")]),e._v("安装了项目开发的依赖，接下来就需要配置"),t("code",[e._v("webpack")]),e._v("，通过"),t("code",[e._v("webpack")]),e._v("来对项目中的静态资源（样式文件、脚本、图片等）进行打包，并实现一系列的自动化构建，使开发更加便捷。")]),e._v(" "),t("p",[e._v("##webpack配置\n这里还是使用上一篇博客中提到的项目目录，在"),t("code",[e._v("./build")]),e._v("文件夹下有三个文件"),t("code",[e._v("webpack.base.config.js")]),e._v("、"),t("code",[e._v("webpack.dev.config.js")]),e._v("、"),t("code",[e._v("webpack.prod.config.js")]),e._v("这三个文件分别是webpack的基础配置、开发配置及生产配置。基础配置包括了webpack的最基本配置，包括入口文件、输入文件、加载器配置、插件配置等，这些配置将在运行项目时告诉webpack需要做些什么，下面是"),t("code",[e._v("webpack.base.config.js")]),e._v("的内容：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("module.exports = {\n  //页面入口文件配置\n  entry: './src/main.js',\n  //入口文件输出配置\n  output: {\n    path: './dist',\n    publicPath: 'dist/',\n    filename: 'build.js'\n  },\n  //加载器配置\n  module: {\n    loaders: [\n      {\n        test: /\\.vue$/,\n        loader: 'vue'\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel!eslint',\n        // make sure to exclude 3rd party code in node_modules\n        exclude: /node_modules/\n      },\n      {\n        // edit this for additional asset file types\n        test: /\\.(png|jpg|gif)$/,\n        loader: 'url',\n        query: {\n          // inline files smaller then 10kb as base64 dataURL\n          limit: 10000,\n          // fallback to file-loader with this naming scheme\n          name: '[name].[ext]?[hash]'\n        }\n      }\n    ]\n  },\n  // vue-loader 设置:\n  //将所有的*.vue文件转化为javascript文件并执行ESLint检测，这里需要配置.eslintrc文件\n  vue: {\n    loaders: {\n      js: 'babel!eslint'\n    }\n  }\n}\n")])])]),t("p",[e._v("(1)entry是页面入口文件配置，output 是对应输出项配置（即入口文件最终要生成什么名字的文件、存放到哪里），在这里，将"),t("code",[e._v("./src/main.js")]),e._v("作为入口文件，将打包整合后的文件输出为"),t("code",[e._v("./dist/build.js")]),e._v("。")]),e._v(" "),t("p",[e._v("(2)module.loaders是webpack最重要的一项配置，它告知webpack每一种文件都需要使用什么加载器来处理：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("module: {\n\t//加载器配置\n    loaders: [\n\t  //.vue文件使用vue-loader处理（这里将-loader省去了）\n      {\n        test: /\\.vue$/,\n        loader: 'vue'\n      },\n\t  //.js文件首先经过ealint-loader处理，再经过babel-loader处理\n      {\n        test: /\\.js$/,\n        loader: 'babel!eslint',\n        // make sure to exclude 3rd party code in node_modules\n        exclude: /node_modules/\n      },\n      {\n        //图片文件使用url-loader处理，小于10kb的直接转换为base64\n        test: /\\.(png|jpg|gif)$/,\n        loader: 'url',\n        query: {\n          limit: 10000,\n          // fallback to file-loader with this naming scheme\n          name: '[name].[ext]?[hash]'\n        }\n      }\n    ]\n  }\n")])])]),t("p",[e._v("注1：对于加载器"),t("code",[e._v("loader")]),e._v('一项，"-loader"可以省略不写；多个loader之间使用"!"连接，类似于Linux的'),t("code",[e._v("pipe")]),e._v("命令，在这种情况下加载器的加载顺序为从右向左处理。")]),e._v(" "),t("p",[e._v("注2：对于所需要的加载器，需要写在"),t("code",[e._v("package.json")]),e._v("文件中，并通过"),t("code",[e._v("npm install")]),e._v("下载安装到"),t("code",[e._v("./node_modules")]),e._v("文件夹中才会生效，否则在编译过程中因找不到加载器报错。")]),e._v(" "),t("p",[e._v("对于"),t("code",[e._v("webpack.dev.config.js")]),e._v("和"),t("code",[e._v("webpack.prod.config.js")]),e._v("，这两个分别是webpack在开发模式和生产模式下的配置。开发模式下通常会配置一些代码错误提示、map等调试信息，在运行项目时使用命令"),t("code",[e._v("npm run dev")]),e._v("时默认使用开发配置；生产配置则用于项目正式发布上线时生产正式"),t("code",[e._v("build.js")]),e._v("文件，在这种模式下不会产生调试信息，同时会压缩文件，在运行"),t("code",[e._v("npm run build")]),e._v("时使用这种配置。")]),e._v(" "),t("p",[e._v("##组件开发\n在一个大型应用中，通常会把界面拆分为多个小组件，每个组件在同一个地方封装它的CSS样式、模板和javascript定义，这样即可以细化任务分配，有利于团队合作，又有利于组件的复用。")]),e._v(" "),t("p",[e._v("在vue.js中,组件以"),t("code",[e._v("*.vue")]),e._v("文件呈现，称之为“单文本组件”，如下是一个组件文本的具体内容：")]),e._v(" "),t("p",[t("img",{attrs:{src:"http://i.imgur.com/7uqcZm4.png",alt:""}})]),e._v(" "),t("p",[e._v("可以看到，将组件的样式放在"),t("code",[e._v("style")]),e._v("标签中，将模板放在放在"),t("code",[e._v("template")]),e._v("标签中，将javascript定义放在"),t("code",[e._v("script")]),e._v("标签中,这样便组成一个小而全的组件。")]),e._v(" "),t("p",[e._v("同时针对"),t("code",[e._v("*.vue")]),e._v("文件格式，需要使用"),t("a",{attrs:{href:"https://github.com/vuejs/vue-loader",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-loader"),t("OutboundLink")],1),e._v("将"),t("code",[e._v("*.vue")]),e._v("转为webpack可以识别的文件格式。")]),e._v(" "),t("p",[e._v("##实例\n模块已安装完毕、webpack也配置完成，同时也了解组件化开发的模式，接下来就在本篇博文和上一篇博文的基础上做一个实时检索的demo，实现通过webpack进行模块整合的组件开发。")]),e._v(" "),t("p",[e._v("首先是"),t("code",[e._v("./index.html")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<!DOCTYPE html>\n<html>\n<head>\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<title>demo</title>\n\n</head>\n<body>\n    <div id="demo"></div>\n    <script src="dist/build.js"><\/script>\n</body>\n</html>\n')])])]),t("p",[e._v("项目入口index文件非常的简单，只需设置一个"),t("code",[e._v('<div id="demo"></div>')]),e._v("作为vue组件的挂载点，再引用通过webpack编译整合后的"),t("code",[e._v("build.js")]),e._v("即可，也无需引入"),t("code",[e._v("style")]),e._v("标签，因为webpack已经将样式以javascript的形式存放在"),t("code",[e._v("build.js")]),e._v("中，在运行"),t("code",[e._v("build.js")]),e._v("，会自动在"),t("code",[e._v("head")]),e._v("上加上"),t("code",[e._v("style")]),e._v("。")]),e._v(" "),t("p",[e._v("接下来我们开始编写我们的app组件，在"),t("code",[e._v(".\\src\\components")]),e._v("中新建两个文件："),t("code",[e._v("condition.vue")]),e._v("、"),t("code",[e._v("list.vue")]),e._v("，分别作为检索输入条件组件和检索列表组件：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('\x3c!--condition.vue--\x3e\n<style scoped>\nh3 {\n\tcolor: red;\n}\ninput {\n\tborder: 1px solod #ebebeb;\n\tpadding-left: 3px;\n}\n</style>\n<template>\n  <div class="condition">\n  \t## search\n    <input type="text" v-model="filterText">\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [\'filterText\']\n}\n')])])]),t("p",[t("code",[e._v("condition.vue")]),e._v("中只有一个input元素，将input元素的数据绑定在"),t("code",[e._v("filterText")]),e._v("属性上。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('\x3c!--list.vue--\x3e\n<style scoped>\nh3 {\n\tcolor: green;\n}\nul {\n\tpadding-left: 0;\n}\nul li {\n\tlist-style: none;\n}\n</style>\n<template>\n  <div class="list">\n  \t## result\n    <ul>\n      <li v-for="item in items">\n        '+e._s(e.item)+"\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['items']\n}\n<\/script>\n")])])]),t("p",[t("code",[e._v("list.vue")]),e._v("将检索列表用"),t("code",[e._v("v-for")]),e._v("进行渲染。")]),e._v(" "),t("p",[e._v("接下来就是将"),t("code",[e._v("condition.vue")]),e._v("和"),t("code",[e._v("list.vue")]),e._v("联系起来，此时需要一个作为整合功能的组件"),t("code",[e._v("App.vue")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("\x3c!--App.vue--\x3e\n<template>\n  <div>\n    <div class=\"condition_box\">\n      <condition :filter-text.sync=\"filterText\"></condition>\n    </div>\n    \n    <div class=\"result_box\">\n      <list :items=\"filteredItems\"></list>\n    </div>\n  </div>\n</template>\n\n<script>\nimport condition from './components/condition.vue'\nimport list from './components/list.vue'\n\nexport default {\n  el: 'body',\n  data () {\n    return {\n      filterText: '',\n      items: ['Jack Yang', 'Angel', 'New York']\n    }\n  },\n  components: {\n    condition,\n    list\n  },\n  computed: {\n    filteredItems: function() {\n      return this.$data.items.filter(function(item) {\n        return item.indexOf(this.$data.filterText) != -1;\n      }.bind(this));\n    }\n  }\n}\n<\/script>\n\n<style scoped>\n* {\n  margin: 0; \n  padding: 0;\n  box-sizing: border-box;\n}\n.box {\n  padding: 10px;\n}\n</style>\n")])])]),t("p",[t("code",[e._v("App.vue")]),e._v("通过es6模块管理的"),t("code",[e._v("import ... from ...")]),e._v("语法将"),t("code",[e._v("condition.vue")]),e._v("和"),t("code",[e._v("list.vue")]),e._v("引用过来，并注册为"),t("code",[e._v("condition")]),e._v("和"),t("code",[e._v("list")]),e._v("标签，再通过"),t("code",[e._v("v-bind")]),e._v("实现父组件和子组件的通信，最后通过"),t("code",[e._v("computed")]),e._v("计算属性实现检索条件和检索结果的对应。")]),e._v(" "),t("p",[e._v("所有的组件(.vue)已经准备完毕，接下来就是需要一个入口文件"),t("code",[e._v("\\src\\main.js")]),e._v("将组件实例化：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("//main.js\nvar Vue = require('vue')\nimport app from './App.vue'\n\nnew Vue(app);\n")])])]),t("p",[e._v("所有的工作已经完成，此时回到项目主目录下，运行：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("npm run dev\n")])])]),t("p",[e._v("在开发模式下运行项目，根据提示在浏览器打开"),t("code",[e._v("http://localhost:8080")]),e._v("即可看到项目,在线"),t("a",{attrs:{href:"http://geocld.github.io/demo/search/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("demo"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("img",{attrs:{src:"http://i.imgur.com/thSza6Q.png",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"http://i.imgur.com/7ILm5iM.png",alt:""}})]),e._v(" "),t("p",[e._v("由于已经开启"),t("code",[e._v("热加载模式")]),e._v("，因此如果在开发模式下修改组件，浏览器会实时将改动呈现在页面上，无需重新刷新，十分方便。")]),e._v(" "),t("p",[e._v("##结语\n本系列博客采用的vue组件开发脚手架已上传至github（"),t("a",{attrs:{href:"https://github.com/Geocld/vue-webpack-vueLoader",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-webpack-vueLoader"),t("OutboundLink")],1),e._v("），后续的项目开发可以以此为基础进行扩展(vue-router\\vue-resource等)。")]),e._v(" "),t("p",[e._v("不止Vue.js有组件开发，Angular.js、React.js也有一样的组件开发过程，不同的框架开发模式也大同小异，同时作为一种数据驱动的框架，搭配组件开发在数据逻辑较为复杂的情形下确实可以提高不少生产力，组件开发给项目开发带来的便利性还需在后续的实际项目中去体会和实践。")]),e._v(" "),t("p",[e._v("（完）")]),e._v(" "),t("p",[e._v("参考资料：")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://cn.vuejs.org/guide/application.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("构建大型应用"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.cnblogs.com/vajoy/p/4650467.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack 入门指南"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://webpack.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack module bundler"),t("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=o.exports}}]);